[c# 알고리즘 퀴즈]
http://www.csharpstudy.com/algo/qalist.aspx

56. 소팅되지 않은 정수 배열이 있을 때, 이 배열에서 계속 숫자가 증가되도록 배열요소를 선별했을 때, 이 선별 배열의 최대 길이는 얼마인가를 계산하는 코드를 작성하시오. 숫자 증가는 연속된 배열 요소에 있지 않아도 된다. 예를 들어, 배열 {2, 6, 4, 5, 1, 3}에 대해 최대 증가 시퀀스는 {2,4,5}로 답은 3이 된다. 
→ 
static void Main(string[] args)
{
    int[] nums = {2, 6, 4, 5, 1, 3};
    GetMaxLIS(nums);
}
static void GetMaxLIS(int[] A)
{
    int max = 0;
    int[] LS = new int[A.Length];
    for (int i=0; i<A.Length; i++)
    {
        LS[i] = 1;

        for(int j=0; j<i; j++)
        {
	if(A[i] > A[j] && LS[i] < LS[j]+1){ LS[i] = LS[j] + 1;
        }
        Console.WriteLine("LS[{0}]={1}", i, LS[i]);

        max = Math.Max(max, LS[i]);
    }
    Console.WriteLine("Max LIS = " + max);
}


57. 단일 링크드 리스트 (Singly Linked List)를 역방향으로 변경하는 C# 코드를 작성하시오. 
→
class SList
{
    public int Value;
    public SList Next;
    public SList(int val) { this.Value = val; }
}

static SList ReverseRecursive(SList prev, SList curr)
{
    SList next = curr.Next;
    curr.Next = prev;

    if (next == null)
        return curr;
    else
        return Reverse(curr, next);
}

static SList ReverseList(SList list)
{
    SList h = list, p = null, q = list;

    while (h != null)
    {
        h = h.Next;                
                
        q.Next = p;
        p = q;

        if (h != null) q = h;                
    }

    return q;
}

